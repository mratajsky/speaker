# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from speaker import system_pb2 as speaker_dot_system__pb2


class DeviceStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetInfo = channel.unary_unary(
                '/Device/GetInfo',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=speaker_dot_system__pb2.DeviceInfo.FromString,
                )
        self.SetName = channel.unary_unary(
                '/Device/SetName',
                request_serializer=speaker_dot_system__pb2.DeviceName.SerializeToString,
                response_deserializer=speaker_dot_system__pb2.Result.FromString,
                )


class DeviceServicer(object):
    """Missing associated documentation comment in .proto file"""

    def GetInfo(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetName(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DeviceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInfo,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=speaker_dot_system__pb2.DeviceInfo.SerializeToString,
            ),
            'SetName': grpc.unary_unary_rpc_method_handler(
                    servicer.SetName,
                    request_deserializer=speaker_dot_system__pb2.DeviceName.FromString,
                    response_serializer=speaker_dot_system__pb2.Result.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Device', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Device(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def GetInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device/GetInfo',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            speaker_dot_system__pb2.DeviceInfo.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Device/SetName',
            speaker_dot_system__pb2.DeviceName.SerializeToString,
            speaker_dot_system__pb2.Result.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class ReaderStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetInputList = channel.unary_stream(
                '/Reader/GetInputList',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=speaker_dot_system__pb2.InputInfo.FromString,
                )
        self.GetStatus = channel.unary_unary(
                '/Reader/GetStatus',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=speaker_dot_system__pb2.ReaderStatus.FromString,
                )
        self.SetMute = channel.unary_unary(
                '/Reader/SetMute',
                request_serializer=speaker_dot_system__pb2.MuteValue.SerializeToString,
                response_deserializer=speaker_dot_system__pb2.Result.FromString,
                )
        self.SetVolume = channel.unary_unary(
                '/Reader/SetVolume',
                request_serializer=speaker_dot_system__pb2.VolumeSingleValue.SerializeToString,
                response_deserializer=speaker_dot_system__pb2.Result.FromString,
                )


class ReaderServicer(object):
    """Missing associated documentation comment in .proto file"""

    def GetInputList(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStatus(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetMute(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetVolume(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ReaderServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetInputList': grpc.unary_stream_rpc_method_handler(
                    servicer.GetInputList,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=speaker_dot_system__pb2.InputInfo.SerializeToString,
            ),
            'GetStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStatus,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=speaker_dot_system__pb2.ReaderStatus.SerializeToString,
            ),
            'SetMute': grpc.unary_unary_rpc_method_handler(
                    servicer.SetMute,
                    request_deserializer=speaker_dot_system__pb2.MuteValue.FromString,
                    response_serializer=speaker_dot_system__pb2.Result.SerializeToString,
            ),
            'SetVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.SetVolume,
                    request_deserializer=speaker_dot_system__pb2.VolumeSingleValue.FromString,
                    response_serializer=speaker_dot_system__pb2.Result.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Reader', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Reader(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def GetInputList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/Reader/GetInputList',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            speaker_dot_system__pb2.InputInfo.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Reader/GetStatus',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            speaker_dot_system__pb2.ReaderStatus.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetMute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Reader/SetMute',
            speaker_dot_system__pb2.MuteValue.SerializeToString,
            speaker_dot_system__pb2.Result.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Reader/SetVolume',
            speaker_dot_system__pb2.VolumeSingleValue.SerializeToString,
            speaker_dot_system__pb2.Result.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class SpeakerStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetConnectedStreams = channel.unary_stream(
                '/Speaker/GetConnectedStreams',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=speaker_dot_system__pb2.SpeakerStreamInfo.FromString,
                )
        self.GetStatus = channel.unary_unary(
                '/Speaker/GetStatus',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=speaker_dot_system__pb2.SpeakerStatus.FromString,
                )
        self.SetMute = channel.unary_unary(
                '/Speaker/SetMute',
                request_serializer=speaker_dot_system__pb2.MuteValue.SerializeToString,
                response_deserializer=speaker_dot_system__pb2.Result.FromString,
                )
        self.SetVolume = channel.unary_unary(
                '/Speaker/SetVolume',
                request_serializer=speaker_dot_system__pb2.VolumeValues.SerializeToString,
                response_deserializer=speaker_dot_system__pb2.Result.FromString,
                )
        self.SetVolumeUniform = channel.unary_unary(
                '/Speaker/SetVolumeUniform',
                request_serializer=speaker_dot_system__pb2.VolumeSingleValue.SerializeToString,
                response_deserializer=speaker_dot_system__pb2.Result.FromString,
                )
        self.ConnectStreams = channel.stream_unary(
                '/Speaker/ConnectStreams',
                request_serializer=speaker_dot_system__pb2.ServerHost.SerializeToString,
                response_deserializer=speaker_dot_system__pb2.Result.FromString,
                )
        self.DisconnectStreams = channel.stream_unary(
                '/Speaker/DisconnectStreams',
                request_serializer=speaker_dot_system__pb2.ServerIdent.SerializeToString,
                response_deserializer=speaker_dot_system__pb2.Result.FromString,
                )
        self.DisconnectAllStreams = channel.unary_unary(
                '/Speaker/DisconnectAllStreams',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=speaker_dot_system__pb2.Result.FromString,
                )


class SpeakerServicer(object):
    """Missing associated documentation comment in .proto file"""

    def GetConnectedStreams(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStatus(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetMute(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetVolume(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetVolumeUniform(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConnectStreams(self, request_iterator, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisconnectStreams(self, request_iterator, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DisconnectAllStreams(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SpeakerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetConnectedStreams': grpc.unary_stream_rpc_method_handler(
                    servicer.GetConnectedStreams,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=speaker_dot_system__pb2.SpeakerStreamInfo.SerializeToString,
            ),
            'GetStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStatus,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=speaker_dot_system__pb2.SpeakerStatus.SerializeToString,
            ),
            'SetMute': grpc.unary_unary_rpc_method_handler(
                    servicer.SetMute,
                    request_deserializer=speaker_dot_system__pb2.MuteValue.FromString,
                    response_serializer=speaker_dot_system__pb2.Result.SerializeToString,
            ),
            'SetVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.SetVolume,
                    request_deserializer=speaker_dot_system__pb2.VolumeValues.FromString,
                    response_serializer=speaker_dot_system__pb2.Result.SerializeToString,
            ),
            'SetVolumeUniform': grpc.unary_unary_rpc_method_handler(
                    servicer.SetVolumeUniform,
                    request_deserializer=speaker_dot_system__pb2.VolumeSingleValue.FromString,
                    response_serializer=speaker_dot_system__pb2.Result.SerializeToString,
            ),
            'ConnectStreams': grpc.stream_unary_rpc_method_handler(
                    servicer.ConnectStreams,
                    request_deserializer=speaker_dot_system__pb2.ServerHost.FromString,
                    response_serializer=speaker_dot_system__pb2.Result.SerializeToString,
            ),
            'DisconnectStreams': grpc.stream_unary_rpc_method_handler(
                    servicer.DisconnectStreams,
                    request_deserializer=speaker_dot_system__pb2.ServerIdent.FromString,
                    response_serializer=speaker_dot_system__pb2.Result.SerializeToString,
            ),
            'DisconnectAllStreams': grpc.unary_unary_rpc_method_handler(
                    servicer.DisconnectAllStreams,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=speaker_dot_system__pb2.Result.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Speaker', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Speaker(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def GetConnectedStreams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/Speaker/GetConnectedStreams',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            speaker_dot_system__pb2.SpeakerStreamInfo.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Speaker/GetStatus',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            speaker_dot_system__pb2.SpeakerStatus.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetMute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Speaker/SetMute',
            speaker_dot_system__pb2.MuteValue.SerializeToString,
            speaker_dot_system__pb2.Result.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Speaker/SetVolume',
            speaker_dot_system__pb2.VolumeValues.SerializeToString,
            speaker_dot_system__pb2.Result.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetVolumeUniform(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Speaker/SetVolumeUniform',
            speaker_dot_system__pb2.VolumeSingleValue.SerializeToString,
            speaker_dot_system__pb2.Result.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ConnectStreams(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/Speaker/ConnectStreams',
            speaker_dot_system__pb2.ServerHost.SerializeToString,
            speaker_dot_system__pb2.Result.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DisconnectStreams(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/Speaker/DisconnectStreams',
            speaker_dot_system__pb2.ServerIdent.SerializeToString,
            speaker_dot_system__pb2.Result.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DisconnectAllStreams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Speaker/DisconnectAllStreams',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            speaker_dot_system__pb2.Result.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class PlayerStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetStatus = channel.unary_unary(
                '/Player/GetStatus',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=speaker_dot_system__pb2.PlayerStatus.FromString,
                )
        self.Start = channel.unary_unary(
                '/Player/Start',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=speaker_dot_system__pb2.Result.FromString,
                )
        self.Stop = channel.unary_unary(
                '/Player/Stop',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=speaker_dot_system__pb2.Result.FromString,
                )
        self.SetLocation = channel.unary_unary(
                '/Player/SetLocation',
                request_serializer=speaker_dot_system__pb2.PlayerLocation.SerializeToString,
                response_deserializer=speaker_dot_system__pb2.Result.FromString,
                )
        self.SetMute = channel.unary_unary(
                '/Player/SetMute',
                request_serializer=speaker_dot_system__pb2.MuteValue.SerializeToString,
                response_deserializer=speaker_dot_system__pb2.Result.FromString,
                )
        self.SetVolume = channel.unary_unary(
                '/Player/SetVolume',
                request_serializer=speaker_dot_system__pb2.VolumeSingleValue.SerializeToString,
                response_deserializer=speaker_dot_system__pb2.Result.FromString,
                )


class PlayerServicer(object):
    """Missing associated documentation comment in .proto file"""

    def GetStatus(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Start(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Stop(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetLocation(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetMute(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetVolume(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PlayerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStatus,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=speaker_dot_system__pb2.PlayerStatus.SerializeToString,
            ),
            'Start': grpc.unary_unary_rpc_method_handler(
                    servicer.Start,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=speaker_dot_system__pb2.Result.SerializeToString,
            ),
            'Stop': grpc.unary_unary_rpc_method_handler(
                    servicer.Stop,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=speaker_dot_system__pb2.Result.SerializeToString,
            ),
            'SetLocation': grpc.unary_unary_rpc_method_handler(
                    servicer.SetLocation,
                    request_deserializer=speaker_dot_system__pb2.PlayerLocation.FromString,
                    response_serializer=speaker_dot_system__pb2.Result.SerializeToString,
            ),
            'SetMute': grpc.unary_unary_rpc_method_handler(
                    servicer.SetMute,
                    request_deserializer=speaker_dot_system__pb2.MuteValue.FromString,
                    response_serializer=speaker_dot_system__pb2.Result.SerializeToString,
            ),
            'SetVolume': grpc.unary_unary_rpc_method_handler(
                    servicer.SetVolume,
                    request_deserializer=speaker_dot_system__pb2.VolumeSingleValue.FromString,
                    response_serializer=speaker_dot_system__pb2.Result.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Player', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Player(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def GetStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Player/GetStatus',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            speaker_dot_system__pb2.PlayerStatus.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Start(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Player/Start',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            speaker_dot_system__pb2.Result.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Stop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Player/Stop',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            speaker_dot_system__pb2.Result.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetLocation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Player/SetLocation',
            speaker_dot_system__pb2.PlayerLocation.SerializeToString,
            speaker_dot_system__pb2.Result.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetMute(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Player/SetMute',
            speaker_dot_system__pb2.MuteValue.SerializeToString,
            speaker_dot_system__pb2.Result.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetVolume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Player/SetVolume',
            speaker_dot_system__pb2.VolumeSingleValue.SerializeToString,
            speaker_dot_system__pb2.Result.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class SpotifyStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetCredentials = channel.unary_unary(
                '/Spotify/GetCredentials',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=speaker_dot_system__pb2.SpotifyCredentials.FromString,
                )
        self.GetOptions = channel.unary_unary(
                '/Spotify/GetOptions',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=speaker_dot_system__pb2.SpotifyOptions.FromString,
                )
        self.GetStatus = channel.unary_unary(
                '/Spotify/GetStatus',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=speaker_dot_system__pb2.SpotifyStatus.FromString,
                )
        self.Start = channel.unary_unary(
                '/Spotify/Start',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=speaker_dot_system__pb2.Result.FromString,
                )
        self.Stop = channel.unary_unary(
                '/Spotify/Stop',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=speaker_dot_system__pb2.Result.FromString,
                )
        self.SetCredentials = channel.unary_unary(
                '/Spotify/SetCredentials',
                request_serializer=speaker_dot_system__pb2.SpotifyCredentials.SerializeToString,
                response_deserializer=speaker_dot_system__pb2.Result.FromString,
                )
        self.SetBitRate = channel.unary_unary(
                '/Spotify/SetBitRate',
                request_serializer=speaker_dot_system__pb2.SpotifyOptBitRate.SerializeToString,
                response_deserializer=speaker_dot_system__pb2.Result.FromString,
                )
        self.SetName = channel.unary_unary(
                '/Spotify/SetName',
                request_serializer=speaker_dot_system__pb2.SpotifyOptName.SerializeToString,
                response_deserializer=speaker_dot_system__pb2.Result.FromString,
                )


class SpotifyServicer(object):
    """Missing associated documentation comment in .proto file"""

    def GetCredentials(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOptions(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStatus(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Start(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Stop(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetCredentials(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetBitRate(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetName(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SpotifyServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetCredentials': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCredentials,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=speaker_dot_system__pb2.SpotifyCredentials.SerializeToString,
            ),
            'GetOptions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOptions,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=speaker_dot_system__pb2.SpotifyOptions.SerializeToString,
            ),
            'GetStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStatus,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=speaker_dot_system__pb2.SpotifyStatus.SerializeToString,
            ),
            'Start': grpc.unary_unary_rpc_method_handler(
                    servicer.Start,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=speaker_dot_system__pb2.Result.SerializeToString,
            ),
            'Stop': grpc.unary_unary_rpc_method_handler(
                    servicer.Stop,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=speaker_dot_system__pb2.Result.SerializeToString,
            ),
            'SetCredentials': grpc.unary_unary_rpc_method_handler(
                    servicer.SetCredentials,
                    request_deserializer=speaker_dot_system__pb2.SpotifyCredentials.FromString,
                    response_serializer=speaker_dot_system__pb2.Result.SerializeToString,
            ),
            'SetBitRate': grpc.unary_unary_rpc_method_handler(
                    servicer.SetBitRate,
                    request_deserializer=speaker_dot_system__pb2.SpotifyOptBitRate.FromString,
                    response_serializer=speaker_dot_system__pb2.Result.SerializeToString,
            ),
            'SetName': grpc.unary_unary_rpc_method_handler(
                    servicer.SetName,
                    request_deserializer=speaker_dot_system__pb2.SpotifyOptName.FromString,
                    response_serializer=speaker_dot_system__pb2.Result.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Spotify', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Spotify(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def GetCredentials(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spotify/GetCredentials',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            speaker_dot_system__pb2.SpotifyCredentials.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOptions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spotify/GetOptions',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            speaker_dot_system__pb2.SpotifyOptions.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spotify/GetStatus',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            speaker_dot_system__pb2.SpotifyStatus.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Start(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spotify/Start',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            speaker_dot_system__pb2.Result.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Stop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spotify/Stop',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            speaker_dot_system__pb2.Result.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetCredentials(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spotify/SetCredentials',
            speaker_dot_system__pb2.SpotifyCredentials.SerializeToString,
            speaker_dot_system__pb2.Result.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetBitRate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spotify/SetBitRate',
            speaker_dot_system__pb2.SpotifyOptBitRate.SerializeToString,
            speaker_dot_system__pb2.Result.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Spotify/SetName',
            speaker_dot_system__pb2.SpotifyOptName.SerializeToString,
            speaker_dot_system__pb2.Result.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
